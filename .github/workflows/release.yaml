on:
  push:
    tags: "v*"
name: Create Github Release
jobs:
  build:
    name: Create Release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Gon
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      - name: Import Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      - name: Build Release Assets
        run: ./ci/steps/build.sh
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ""
          draft: true
          prerelease: false
      - name: Upload Linux Release
        id: upload-linux-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ci/bin/coder-cli-linux-amd64.tar.gz
          asset_name: coder-cli-linux-amd64.tar.gz
          asset_content_type: application/tar+gzip
      - name: Upload MacOS Release
        id: upload-macos-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ci/bin/coder-cli-darwin-amd64.zip
          asset_name: coder-cli-darwin-amd64.zip
          asset_content_type: application/zip
      - name: Upload Windows Release
        id: upload-windows-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ci/bin/coder-cli-windows-386.zip
          asset_name: coder-cli-windows-386.zip
          asset_content_type: application/zip

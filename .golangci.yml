# See https://golangci-lint.run/usage/configuration/
linters-settings:
  goconst:
    min-len: 4 
    min-occurrences: 3
  gocognit:
    # tunnel.go has a 150 line function. Someone should fix it and
    # decrement this back down to a rational number.
    min-complexity: 52
  nestif:
    min-complexity: 10
  govet:
    settings:
      printf:
        funcs: # Run `go tool vet help printf` to see available settings for `printf` analyzer.
          - (cdr.dev/coder-cli/pkg/clog).Tipf
          - (cdr.dev/coder-cli/pkg/clog).Hintf
          - (cdr.dev/coder-cli/pkg/clog).Causef
linters:
  disable-all: true
  exclude-use-default: false
  enable:
    - megacheck
    - govet
    - golint
    - goconst
    - gocognit
    - nestif
    - misspell
    - unparam
    - unused
    - bodyclose
    - deadcode
    - depguard
    - dogsled
    - errcheck
    - unconvert
    - unparam
    - varcheck
    - whitespace    
    - structcheck
    - stylecheck
    - typecheck
    - nolintlint
    - rowserrcheck
    - scopelint
    - goprintffuncname
    - gofmt
    - godot
    - ineffassign
    - gocritic

issues:
  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # golint: False positive when tests are defined in package 'test'
    - func name will be used as test\.Test.* by other packages, and that stutters; consider calling this
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    # gosec: Too many false-positives on 'unsafe' usage
    - Use of unsafe calls should be audited
    # gosec: Too many false-positives for parametrized shell calls
    - Subprocess launch(ed with variable|ing should be audited)
    # gosec: Duplicated errcheck checks
    - G104
    # gosec: Too many issues in popular repos
    - (Expect directory permissions to be 0750 or less|Expect file permissions to be 0600 or less)
    # gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - Potential file inclusion via variable

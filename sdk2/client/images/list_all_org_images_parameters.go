// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListAllOrgImagesParams creates a new ListAllOrgImagesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListAllOrgImagesParams() *ListAllOrgImagesParams {
	return &ListAllOrgImagesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListAllOrgImagesParamsWithTimeout creates a new ListAllOrgImagesParams object
// with the ability to set a timeout on a request.
func NewListAllOrgImagesParamsWithTimeout(timeout time.Duration) *ListAllOrgImagesParams {
	return &ListAllOrgImagesParams{
		timeout: timeout,
	}
}

// NewListAllOrgImagesParamsWithContext creates a new ListAllOrgImagesParams object
// with the ability to set a context for a request.
func NewListAllOrgImagesParamsWithContext(ctx context.Context) *ListAllOrgImagesParams {
	return &ListAllOrgImagesParams{
		Context: ctx,
	}
}

// NewListAllOrgImagesParamsWithHTTPClient creates a new ListAllOrgImagesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListAllOrgImagesParamsWithHTTPClient(client *http.Client) *ListAllOrgImagesParams {
	return &ListAllOrgImagesParams{
		HTTPClient: client,
	}
}

/* ListAllOrgImagesParams contains all the parameters to send to the API endpoint
   for the list all org images operation.

   Typically these are written to a http.Request.
*/
type ListAllOrgImagesParams struct {

	/* Envs.

	   Populate 'environments' with environments using this image
	*/
	Envs *bool

	/* Org.

	   Org ID
	*/
	Org string

	/* UserIds.

	   Populate 'user_ids' with User IDs using this image
	*/
	UserIds *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list all org images params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListAllOrgImagesParams) WithDefaults() *ListAllOrgImagesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list all org images params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListAllOrgImagesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list all org images params
func (o *ListAllOrgImagesParams) WithTimeout(timeout time.Duration) *ListAllOrgImagesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list all org images params
func (o *ListAllOrgImagesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list all org images params
func (o *ListAllOrgImagesParams) WithContext(ctx context.Context) *ListAllOrgImagesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list all org images params
func (o *ListAllOrgImagesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list all org images params
func (o *ListAllOrgImagesParams) WithHTTPClient(client *http.Client) *ListAllOrgImagesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list all org images params
func (o *ListAllOrgImagesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvs adds the envs to the list all org images params
func (o *ListAllOrgImagesParams) WithEnvs(envs *bool) *ListAllOrgImagesParams {
	o.SetEnvs(envs)
	return o
}

// SetEnvs adds the envs to the list all org images params
func (o *ListAllOrgImagesParams) SetEnvs(envs *bool) {
	o.Envs = envs
}

// WithOrg adds the org to the list all org images params
func (o *ListAllOrgImagesParams) WithOrg(org string) *ListAllOrgImagesParams {
	o.SetOrg(org)
	return o
}

// SetOrg adds the org to the list all org images params
func (o *ListAllOrgImagesParams) SetOrg(org string) {
	o.Org = org
}

// WithUserIds adds the userIds to the list all org images params
func (o *ListAllOrgImagesParams) WithUserIds(userIds *bool) *ListAllOrgImagesParams {
	o.SetUserIds(userIds)
	return o
}

// SetUserIds adds the userIds to the list all org images params
func (o *ListAllOrgImagesParams) SetUserIds(userIds *bool) {
	o.UserIds = userIds
}

// WriteToRequest writes these params to a swagger request
func (o *ListAllOrgImagesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Envs != nil {

		// query param envs
		var qrEnvs bool

		if o.Envs != nil {
			qrEnvs = *o.Envs
		}
		qEnvs := swag.FormatBool(qrEnvs)
		if qEnvs != "" {

			if err := r.SetQueryParam("envs", qEnvs); err != nil {
				return err
			}
		}
	}

	// query param org
	qrOrg := o.Org
	qOrg := qrOrg
	if qOrg != "" {

		if err := r.SetQueryParam("org", qOrg); err != nil {
			return err
		}
	}

	if o.UserIds != nil {

		// query param user_ids
		var qrUserIds bool

		if o.UserIds != nil {
			qrUserIds = *o.UserIds
		}
		qUserIds := swag.FormatBool(qrUserIds)
		if qUserIds != "" {

			if err := r.SetQueryParam("user_ids", qUserIds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

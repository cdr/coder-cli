// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UsageMetric usage metric
//
// swagger:model UsageMetric
type UsageMetric struct {

	// Activity represents the total activity within the bucket. Unit
	// depends on route.
	Activity int64 `json:"activity,omitempty"`

	// Bucket is the timestamp where the usage metric starts.
	Bucket string `json:"bucket,omitempty"`

	// Duration represents the total range of the bucket in minutes.
	Duration int64 `json:"duration,omitempty"`

	// Conditionally returned corresponding to the bucket chosen in the
	// filter.
	EnvironmentID string `json:"environment_id,omitempty"`

	// Conditionally returned corresponding to the bucket chosen in the
	// filter.
	OrganizationID string `json:"organization_id,omitempty"`

	// Conditionally returned corresponding to the bucket chosen in the
	// filter.
	Source string `json:"source,omitempty"`

	// The User that generated the metric.
	UserID string `json:"user_id,omitempty"`
}

// Validate validates this usage metric
func (m *UsageMetric) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this usage metric based on context it is used
func (m *UsageMetric) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UsageMetric) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UsageMetric) UnmarshalBinary(b []byte) error {
	var res UsageMetric
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

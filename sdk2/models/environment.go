// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Environment environment
//
// swagger:model Environment
type Environment struct {

	// auto off threshold
	AutoOffThreshold int64 `json:"auto_off_threshold,omitempty"`

	// autostart enabled
	AutostartEnabled bool `json:"autostart_enabled,omitempty"`

	// cpu cores
	CPUCores float64 `json:"cpu_cores,omitempty"`

	// created at
	CreatedAt string `json:"created_at,omitempty"`

	// disk gb
	DiskGb int64 `json:"disk_gb,omitempty"`

	// gpus
	Gpus int64 `json:"gpus,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// image digest
	ImageDigest string `json:"image_digest,omitempty"`

	// image id
	ImageID string `json:"image_id,omitempty"`

	// image tag
	ImageTag string `json:"image_tag,omitempty"`

	// last built at
	LastBuiltAt string `json:"last_built_at,omitempty"`

	// last connection at
	LastConnectionAt string `json:"last_connection_at,omitempty"`

	// last opened at
	LastOpenedAt string `json:"last_opened_at,omitempty"`

	// latest stat
	LatestStat *EnvironmentStat `json:"latest_stat,omitempty"`

	// memory gb
	MemoryGb float64 `json:"memory_gb,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// organization id
	OrganizationID string `json:"organization_id,omitempty"`

	// rebuild messages
	RebuildMessages []*RebuildMessage `json:"rebuild_messages"`

	// resource pool id
	ResourcePoolID string `json:"resource_pool_id,omitempty"`

	// template id
	TemplateID string `json:"template_id,omitempty"`

	// updated at
	UpdatedAt string `json:"updated_at,omitempty"`

	// updating
	Updating bool `json:"updating,omitempty"`

	// use container vm
	UseContainerVM bool `json:"use_container_vm,omitempty"`

	// user id
	UserID string `json:"user_id,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this environment
func (m *Environment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLatestStat(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRebuildMessages(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Environment) validateLatestStat(formats strfmt.Registry) error {
	if swag.IsZero(m.LatestStat) { // not required
		return nil
	}

	if m.LatestStat != nil {
		if err := m.LatestStat.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("latest_stat")
			}
			return err
		}
	}

	return nil
}

func (m *Environment) validateRebuildMessages(formats strfmt.Registry) error {
	if swag.IsZero(m.RebuildMessages) { // not required
		return nil
	}

	for i := 0; i < len(m.RebuildMessages); i++ {
		if swag.IsZero(m.RebuildMessages[i]) { // not required
			continue
		}

		if m.RebuildMessages[i] != nil {
			if err := m.RebuildMessages[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rebuild_messages" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this environment based on the context it is used
func (m *Environment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateLatestStat(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRebuildMessages(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Environment) contextValidateLatestStat(ctx context.Context, formats strfmt.Registry) error {

	if m.LatestStat != nil {
		if err := m.LatestStat.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("latest_stat")
			}
			return err
		}
	}

	return nil
}

func (m *Environment) contextValidateRebuildMessages(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.RebuildMessages); i++ {

		if m.RebuildMessages[i] != nil {
			if err := m.RebuildMessages[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rebuild_messages" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *Environment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Environment) UnmarshalBinary(b []byte) error {
	var res Environment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
